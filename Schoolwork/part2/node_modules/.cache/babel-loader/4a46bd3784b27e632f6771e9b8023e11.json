{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Course\\\\Schoolwork\\\\part2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    noteService.getAll().then(response => {\n      setNotes(response.data);\n    });\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    };\n    noteService.create(noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = id => {\n    const url = `http://localhost:3001/notes/${id}`;\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map((note, i) => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YoJCZcz2gqmCo+muBMJeaVoxZWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/React Course/Schoolwork/part2/src/App.js"],"names":["React","useState","useEffect","axios","Note","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","getAll","then","response","data","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","create","concat","handleNoteChange","console","log","target","value","toggleImportanceOf","id","url","note","find","n","changedNote","update","map","notesToShow","filter","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(response => {\n        setNotes(response.data)\n      })\n  }, [])\n\nconst addNote = (event) => {\n  event.preventDefault()\n  const noteObject = {\n    content: newNote,\n    date: new Date().toISOString(),\n    important: Math.random() < 0.5,\n  }\n\n  noteService\n    .create(noteObject)\n    .then(response => {\n      setNotes(notes.concat(response.data))\n      setNewNote('')\n    })\n\n  \n}\n\nconst handleNoteChange = (event) => {\n  console.log(event.target.value)\n  setNewNote(event.target.value)\n}\n\nconst toggleImportanceOf = id => {\n  const url = `http://localhost:3001/notes/${id}`\n  const note = notes.find(n => n.id === id)\n  const changedNote = { ...note, important: !note.important}\n  \n  noteService\n  .update(id, changedNote)\n  .then(response => {\n    setNotes(notes.map(note => note.id !== id ? note : response.data))\n  })\n}\n\nconst notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => \n          <Note key = {i} \n          note={note}\n          toggleImportance={() => toggleImportanceOf(note.id)} \n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\"> save</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}