{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Course\\\\Homework\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Display = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Display;\n\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  const total = good + neutral + bad;\n  const average = (good - bad) / total;\n  const positive = good / total * 100;\n\n  if (total === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n      value: good,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"all \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"average \", average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"positive \", positive, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Statistics;\n\nconst StatisticLine = _ref4 => {\n  let {\n    value,\n    text\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_c4 = StatisticLine;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      text: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"StatisticLine\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["C:/React Course/Homework/part1/unicafe/src/App.js"],"names":["React","useState","Button","onClick","text","Display","Statistics","good","neutral","bad","total","average","positive","StatisticLine","value","App","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = ({onClick, text}) => (\n\n  <button onClick={onClick}>\n    {text}\n  </button>\n\n)\n\nconst Display = ({text}) => (\n  <div>\n    <h1>\n      {text}\n    </h1>\n  </div>\n)\n\nconst Statistics = ({good, neutral, bad}) => {\n  const total = good + neutral + bad\n  const average = (good - bad) / total\n  const positive = good / total * 100\n  if(total === 0) {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n  return (\n    <>\n      <StatisticLine value={good} text=\"good\" />\n      <div>neutral {neutral}</div>\n      <div>bad {bad}</div>\n      <div>all {total}</div>\n      <div>average {average}</div>\n      <div>positive {positive} %</div>\n    </>\n  )\n}\n\nconst StatisticLine = ({value, text}) => (\n  <div>{text} {value}</div>\n)\n\nconst App = () => {\n  \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {\n    setGood(good + 1)\n  }\n\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1)\n  }\n\n  const handleBadClick = () => {\n    setBad(bad + 1)\n  }\n\n  return (\n    <div>\n      <Display text=\"give feedback\" />\n      <Button onClick={() => setGood(good + 1)} text=\"good\" />\n      <Button onClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n      <Button onClick={() => setBad(bad + 1)} text=\"bad\" />\n      <Display text=\"statistics\" />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n      \n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}