{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Course\\\\Homework\\\\part2\\\\countries\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Filter = _ref => {\n  let {\n    text,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [text, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 50\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 38\n  }, this);\n};\n\n_c = Filter;\n\nconst Countries = _ref2 => {\n  let {\n    countriesToShow,\n    showDetails\n  } = _ref2;\n\n  if (countriesToShow.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There are no countries to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (countriesToShow.length === 1) {\n    return /*#__PURE__*/_jsxDEV(DetailedCountry, {\n      country: countriesToShow[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  } else if (countriesToShow.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"There are too many countries to show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: countriesToShow.map(country => /*#__PURE__*/_jsxDEV(Country, {\n      name: country.name.common,\n      showDetails: showDetails\n    }, country.cca2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Countries;\n\nconst Country = _ref3 => {\n  let {\n    name,\n    showDetails\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showDetails(name),\n        children: \" show \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Country;\n\nconst DetailedCountry = _ref4 => {\n  _s();\n\n  let {\n    country\n  } = _ref4;\n  const [weather, setWeather] = useState({});\n  const api_key = process.env.REACT_APP_API_KEY;\n  useEffect(() => {\n    axios.get(`http://api.weatherstack.com/current?access_key=${api_key}&query=${country.capital}`).then(response => {\n      setWeather(response.data.current);\n    });\n    return () => setWeather({});\n  }, [country.capital]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"capital \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"population \", country.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Languages, {\n      languages: country.languages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: country.flags.png,\n      alt: \"nothing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), console.log(weather), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather in \", country.capital, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"temperature:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this), \" \", weather.temperature, \" Celsius\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: weather_icons[0],\n      alt: weather.weather_descriptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"wind: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \" \", weather.wind_speed, \" mph direction \", weather.wind_dir]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DetailedCountry, \"p44c62psaVm/fTquZwTezXTodIU=\");\n\n_c4 = DetailedCountry;\n\nconst Languages = _ref5 => {\n  let {\n    languages\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: Object.keys(languages).map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: languages[language]\n    }, language, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 49\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Languages;\n\nconst App = () => {\n  _s2();\n\n  const [countries, setCountries] = useState([]);\n  const [newFilterName, setFilterName] = useState('United');\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      setCountries(response.data);\n    });\n  }, []); //console.log(countries)\n\n  const countriesToShow = countries.filter(country => country.name.common.toLowerCase().includes(newFilterName));\n\n  const handleFilterChange = event => {\n    setFilterName(event.target.value.toLowerCase());\n  };\n\n  const showDetails = name => {\n    setFilterName(name.toLowerCase());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      text: \"find countries\",\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countriesToShow: countriesToShow,\n      showDetails: showDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(App, \"elDwcDb77bKHVmopEeM8mTlpjgM=\");\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"Countries\");\n$RefreshReg$(_c3, \"Country\");\n$RefreshReg$(_c4, \"DetailedCountry\");\n$RefreshReg$(_c5, \"Languages\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["C:/React Course/Homework/part2/countries/src/App.js"],"names":["React","useState","useEffect","axios","Filter","text","onChange","Countries","countriesToShow","showDetails","length","map","country","name","common","cca2","Country","DetailedCountry","weather","setWeather","api_key","process","env","REACT_APP_API_KEY","get","capital","then","response","data","current","population","languages","flags","png","console","log","temperature","weather_icons","weather_descriptions","wind_speed","wind_dir","Languages","Object","keys","language","App","countries","setCountries","newFilterName","setFilterName","filter","toLowerCase","includes","handleFilterChange","event","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD;AAAA,sBAAsB;AAAA,eAAMD,IAAN,oBAAY;AAAO,MAAA,QAAQ,EAAEC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;AAAA,CAAf;;KAAMF,M;;AAEN,MAAMG,SAAS,GAAG,SAAoC;AAAA,MAAnC;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,GAAmC;;AACpD,MAAID,eAAe,CAACE,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAIF,eAAe,CAACE,MAAhB,KAA0B,CAA9B,EAAiC;AAC/B,wBACE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAIF,eAAe,CAAC,CAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJD,MAKK,IAAGA,eAAe,CAACE,MAAhB,GAAyB,EAA5B,EAAgC;AACnC,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,sBACA;AAAA,cACOF,eAAe,CAACG,GAAhB,CAAoBC,OAAO,iBAC5B,QAAC,OAAD;AAA4B,MAAA,IAAI,EAAEA,OAAO,CAACC,IAAR,CAAaC,MAA/C;AAAuD,MAAA,WAAW,EAAEL;AAApE,OAAcG,OAAO,CAACG,IAAtB;AAAA;AAAA;AAAA;AAAA,YADC;AADP;AAAA;AAAA;AAAA;AAAA,UADA;AAMD,CA1BD;;MAAMR,S;;AA4BN,MAAMS,OAAO,GAAG,SAAyB;AAAA,MAAxB;AAACH,IAAAA,IAAD;AAAOJ,IAAAA;AAAP,GAAwB;AACvC,sBACE;AAAA,4BACE;AAAA,gBAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,MAAMJ,WAAW,CAACI,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD,CATD;;MAAMG,O;;AAWN,MAAMC,eAAe,GAAG,SAAe;AAAA;;AAAA,MAAd;AAACL,IAAAA;AAAD,GAAc;AAErC,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMmB,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACAqB,GADL,CAES,kDAAiDJ,OAAQ,UAASR,OAAO,CAACa,OAAQ,EAF3F,EAIKC,IAJL,CAIUC,QAAQ,IAAI;AACdR,MAAAA,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAV;AACH,KANL;AAOA,WAAO,MAAMV,UAAU,CAAC,EAAD,CAAvB;AACH,GATU,EASR,CAACP,OAAO,CAACa,OAAT,CATQ,CAAT;AAWA,sBACE;AAAA,4BACE;AAAA,gBAAKb,OAAO,CAACC,IAAR,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAA,6BAAcF,OAAO,CAACa,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gCAAiBb,OAAO,CAACkB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,oBAIqB,QAAC,SAAD;AAAW,MAAA,SAAS,EAAElB,OAAO,CAACmB;AAA9B;AAAA;AAAA;AAAA;AAAA,YAJrB,eAME;AAAK,MAAA,GAAG,EAAEnB,OAAO,CAACoB,KAAR,CAAcC,GAAxB;AAA6B,MAAA,GAAG,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YANF,EAQGC,OAAO,CAACC,GAAR,CAAYjB,OAAZ,CARH,eASE;AAAA,gCAAgBN,OAAO,CAACa,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,8BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,OAAkCP,OAAO,CAACkB,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AACE,MAAA,GAAG,EAAEC,aAAa,CAAC,CAAD,CADpB;AAEE,MAAA,GAAG,EAAEnB,OAAO,CAACoB;AAFf;AAAA;AAAA;AAAA;AAAA,YAXF,eAeE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,OAC2BpB,OAAO,CAACqB,UADnC,qBAC8DrB,OAAO,CAACsB,QADtE;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAwBD,CAxCD;;GAAMvB,e;;MAAAA,e;;AA0CN,MAAMwB,SAAS,GAAG,SAAiB;AAAA,MAAhB;AAACV,IAAAA;AAAD,GAAgB;AACjC,sBACE;AAAA,cACGW,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBpB,GAAvB,CAA4BiC,QAAD,iBAAc;AAAA,gBAAoBb,SAAS,CAACa,QAAD;AAA7B,OAASA,QAAT;AAAA;AAAA;AAAA;AAAA,YAAzC;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMH,S;;AAQN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B9C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+C,aAAD,EAAgBC,aAAhB,IAAiChD,QAAQ,CAAC,QAAD,CAA/C;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACfC,IAAAA,KAAK,CACFqB,GADH,CACO,oCADP,EAEGE,IAFH,CAEQC,QAAQ,IAAI;AAChBoB,MAAAA,YAAY,CAACpB,QAAQ,CAACC,IAAV,CAAZ;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT,CAJgB,CAahB;;AAEA,QAAMpB,eAAe,GAAGsC,SAAS,CAACI,MAAV,CAAkBtC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,MAAb,CAAoBqC,WAApB,GAAkCC,QAAlC,CAA2CJ,aAA3C,CAA9B,CAAxB;;AAEA,QAAMK,kBAAkB,GAAIC,KAAD,IAAW;AACpCL,IAAAA,aAAa,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBL,WAAnB,EAAD,CAAb;AACD,GAFD;;AAIA,QAAM1C,WAAW,GAAII,IAAD,IAAU;AAC5BoC,IAAAA,aAAa,CAACpC,IAAI,CAACsC,WAAL,EAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,gBAAb;AAA8B,MAAA,QAAQ,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,eAAe,EAAE7C,eAA5B;AAA6C,MAAA,WAAW,EAAIC;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA/BD;;IAAMoC,G;;MAAAA,G;AAiCN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst Filter = ({text, onChange}) => <div>{text} <input onChange={onChange} /></div>\n\nconst Countries = ({countriesToShow, showDetails}) => {\n  if (countriesToShow.length === 0) {\n    return (\n      <div>\n        There are no countries to show\n      </div>\n    )\n  }\n  if (countriesToShow.length ===1) {\n    return (\n      <DetailedCountry country = {countriesToShow[0]} />\n    )\n  }\n  else if(countriesToShow.length > 10) {\n    return (\n      <div>\n        There are too many countries to show\n      </div>\n    )\n  }\n  return(\n  <ul>\n        {countriesToShow.map(country => \n        <Country key={country.cca2} name={country.name.common} showDetails={showDetails}/>) }\n  </ul>\n  )\n}\n\nconst Country = ({name, showDetails}) => {\n  return (\n    <>\n      <div>{name}</div>\n      <div>\n          <button onClick={() => showDetails(name)}> show </button>\n      </div>\n    </>\n  )\n}\n\nconst DetailedCountry = ({country}) => {\n\n  const [weather, setWeather] = useState({})\n  const api_key = process.env.REACT_APP_API_KEY\n\n  useEffect(() => {\n    axios\n        .get(\n            `http://api.weatherstack.com/current?access_key=${api_key}&query=${country.capital}`\n        )\n        .then(response => {\n            setWeather(response.data.current)\n        })\n    return () => setWeather({})\n}, [country.capital])\n\n  return (\n    <>\n      <h2>{country.name.common}</h2>\n        <div>capital {country.capital}</div>\n        <div>population {country.population}</div>\n      <h1>languages</h1> <Languages languages={country.languages} />\n      \n      <img src={country.flags.png} alt=\"nothing\"/>\n\n      {console.log(weather)}\n      <h2>Weather in {country.capital} </h2>\n      <p><strong>temperature:</strong> {weather.temperature} Celsius</p>\n      <img\n        src={weather_icons[0]}\n        alt={weather.weather_descriptions}\n      />\n      <p>\n        <strong>wind: </strong> {weather.wind_speed} mph direction {weather.wind_dir}\n      </p>\n\n\n    </>\n\n  )\n}\n\nconst Languages = ({languages}) => {\n  return (\n    <ul>\n      {Object.keys(languages).map((language) => <li key={language}>{languages[language]}</li> )}\n    </ul>\n  )\n}\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [newFilterName, setFilterName] = useState('United')\n\n  useEffect( () => {\n    axios\n      .get('https://restcountries.com/v3.1/all')\n      .then(response => {\n        setCountries(response.data)\n      })\n  }, [])\n\n\n  //console.log(countries)\n\n  const countriesToShow = countries.filter((country) => country.name.common.toLowerCase().includes(newFilterName))\n\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value.toLowerCase())\n  }\n\n  const showDetails = (name) => {\n    setFilterName(name.toLowerCase())\n  }\n\n  return (\n    <div>\n      <Filter text=\"find countries\" onChange={handleFilterChange} />\n      <Countries countriesToShow={countriesToShow} showDetails = {showDetails}/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}